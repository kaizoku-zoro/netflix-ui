{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","opts","height","width","playerVars","autoplay","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailer","useEffect","a","get","timeout","request","data","results","console","error","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","input","setMovie","Math","floor","random","length","fetchPoster","style","backgroundSize","backgroundImage","original_name","overview","substring","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","border","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6c247a4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n});\r\n\r\nexport default instance;","import React, { useState, useEffect } from 'react'\r\nimport axios from './axios'\r\nimport \"./Row.css\";\r\nimport Youtube from 'react-youtube'\r\nimport movieTrailer from 'movie-trailer'\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\r\n\r\nconst opts={\r\n    height:\"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n        autoplay:1,\r\n    }\r\n}\r\nfunction Row({ title, fetchUrl,isLargeRow}) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl,setTrailer]=useState(\"\");\r\n    useEffect(() => {\r\n\r\n        async function fetchData() {\r\n            try {\r\n                const request = await axios.get(fetchUrl, { timeout: 5000 });\r\n                setMovies(request.data.results);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n\r\n            // console.log(request);\r\n        }\r\n        fetchData()\r\n\r\n\r\n    }, [fetchUrl]);\r\n\r\n    const handleClick = (movie) =>{\r\n        if(trailerUrl){\r\n            setTrailer(\"\");\r\n        }\r\n        else{\r\n            movieTrailer(movie?.name|| \"\")\r\n                .then((url) =>{\r\n                    const urlParams = new URLSearchParams(new URL(url).search);\r\n                    setTrailer(urlParams.get('v'))\r\n                }).catch(error => console.log(error))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className={`row_posters`}>\r\n                {movies.map(movie => (\r\n                    <img onClick={()=>handleClick(movie)} key={movie.id} className={`${isLargeRow&&\"row_posterLarge\"} row_poster`} src={`${base_url}${isLargeRow ? movie.poster_path:movie.backdrop_path}`} alt={movie.name}></img>\r\n                ))}\r\n            </div>\r\n            {trailerUrl&&<Youtube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","const API_KEY = \"c7bb542d6e66dd8ce0e434eaec4cee5f\";\r\n\r\n\r\nconst requests ={\r\nfetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\nfetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=49`,\r\nfetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\nfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\nfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\nfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\nfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\nfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import React,{useEffect,useState} from 'react'\r\nimport axios from './axios'\r\nimport requests from './requests'\r\nimport \"./Banner.css\"\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\r\n\r\n\r\nfunction truncate(input) {\r\n    if(typeof input === 'undefined'){\r\n        return \"\";\r\n    }\r\n    if (input.length > 500) {\r\n       return input.substring(0, 500) + '...';\r\n    }\r\n    return input;\r\n };\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([])\r\n    useEffect(() => {\r\n        async function fetchPoster(){\r\n            const request = await axios.get(requests.fetchNetflixOriginals)\r\n            setMovie(\r\n                request.data.results[\r\n                    Math.floor(Math.random()*(request.data.results.length-1))\r\n                ]\r\n            )\r\n        }\r\n        fetchPoster();\r\n    }, [])\r\n    console.log(movie)\r\n\r\n    return (\r\n        <header className=\"banner\" style={\r\n            {\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(${base_url}${movie?.backdrop_path})`\r\n            }\r\n        }>\r\n            <div className=\"banner_contents\">\r\n                <h1 className=\"banner_title\">{movie?.title||movie?.name||movie?.original_name}</h1>\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">Play</button>\r\n                    <button className=\"banner_button\">My List</button>\r\n                </div>\r\n                <h1 className=\"banner_desc\">\r\n                    {truncate(movie?.overview)}\r\n                </h1>\r\n            </div>\r\n            <div className=\"fadeBottom\"></div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React,{useEffect,useState} from 'react'\r\nimport \"./Nav.css\"\r\nfunction Nav() {\r\n    const [show,handleShow] = useState(false);\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\",()=>{\r\n            if(window.scrollY>100){\r\n                handleShow(true)\r\n            }\r\n            else{\r\n                handleShow(false)\r\n            }\r\n        });\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\",()=>{\r\n                if(window.scrollY>100){\r\n                    handleShow(true)\r\n                }\r\n                else{\r\n                    handleShow(false)\r\n                }\r\n            });\r\n        };\r\n    },[]);\r\n    return (\r\n        <div className={`nav ${show && \"nav_black\"}`}>\r\n            \r\n            <img className=\"nav_logo\" src=\"https://fontmeme.com/permalink/210426/393abcbfab08bb13cd28da5d8ce8f255.png\" alt=\"nikflix-logo\" border=\"0\"></img>\r\n            <a href=\"https://www.linkedin.com/in/nikunj-s-000784191/\"><img className=\"nav_icon\" src=\"https://image.flaticon.com/icons/png/512/174/174857.png\"></img></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import './App.css';\nimport Row from './Row';\nimport requests from './requests'\nimport Banner from './Banner'\nimport Nav from './Nav'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Banner/>\n      <Row title=\"ORIGINALS\" isLargeRow={true} fetchUrl={requests.fetchNetflixOriginals}/>\n      <Row title=\"Trending\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Comedy\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"Horror\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}